labs(title = "Gráfico de LFA por Variedad y Riego", x = "variedad", y = "LFA", fill = "riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9) , vjust = -0.5) +
labs(title = "Gráfico de LFA por Variedad y Riego", x = "variedad", y = "LFA", fill = "riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
# Crear el gráfico de barras con ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +   # Barras agrupadas por riego
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) + # Etiquetas de los grupos sobre las barras
labs(title = "Producción por Variedad y Riego", x = "Variedad", y = "LFA") +   # Etiquetas de los ejes y título
scale_fill_manual(values = c("irrigado" = "tomato", "sequia" = "turquoise3")) + # Colores personalizados para riego
theme_minimal() +  # Tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje X
View(fb)
fb <- LA_MOLINA_2014_POTATO_WUE_FB_1_ <- read_excel("LA MOLINA 2014 POTATO WUE (FB) (1).xlsx",
sheet = "fb")
dss <- read.csv(file = "datos 2/LA MOLINA 2014 POTATO WUE (FB) - fb.csv", header = TRUE, sep = "," )
View(dss)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno
, data = fb)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno
, data = dss)
anova (modelo)
str (dss)
library(ggplot2)
ggplot(fb, aes(x = geno, y = lfa, fill = riego)) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA", title = "Boxplot de LFA por Genotipo y Riego") +
theme_minimal()
ggplot(dss, aes(x = geno, y = lfa, fill = riego)) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA", title = "Boxplot de LFA por Genotipo y Riego") +
theme_minimal()
library(agricolae)
library(tidyverse)
#  comparación de medias para el factor geno
cat("Comparación de medias para geno:\n")
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# comparación de medias para el factor riego
cat("Comparación de medias para riego:\n")
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
# para la interaccion geno:riego
cat("Comparación de medias para la interacción geno:riego:\n")
tukey_interaccion <- HSD.test(modelo, c("riego", "geno"), group = TRUE)
print(tukey_interaccion)
str (tukey_interaccion)
mc <- tukey_interaccion$groups %>%
rownames_to_column("trat") %>%
separate(trat, c("riego", "variedad"))
str (mc)
library(ggplot2)
# Crear el gráfico de barras con ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +   # Barras agrupadas por riego
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) + # Etiquetas de los grupos sobre las barras
labs(title = "Producción por Variedad y Riego", x = "Variedad", y = "LFA") +   # Etiquetas de los ejes y título
scale_fill_manual(values = c("irrigado" = "tomato", "sequia" = "turquoise3")) + # Colores personalizados para riego
theme_minimal() +  # Tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje X
ggplot(dss, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "genotipo" , y = "LFA" , fill = "riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Boxplot de LFA por genotipo y riego")
library(agricolae)
library(tidyverse)
#  comparación de medias para el factor geno
cat("Comparación de medias para geno:\n")
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# comparación de medias para el factor riego
cat("Comparación de medias para riego:\n")
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
# para la interaccion geno:riego
cat("Comparación de medias para la interacción geno:riego:\n")
tukey_interaccion <- HSD.test(modelo, c("riego", "geno"), group = TRUE)
print(tukey_interaccion)
str (tukey_interaccion)
mc <- tukey_interaccion$groups %>%
rownames_to_column("trat") %>%
separate(trat, c("riego", "variedad"))
str (mc)
# Crear el gráfico de barras con ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +   # Barras agrupadas por riego
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) + # Etiquetas de los grupos sobre las barras
labs(title = "Producción por Variedad y Riego", x = "Variedad", y = "LFA") +   # Etiquetas de los ejes y título
scale_fill_manual(values = c("irrigado" = "tomato", "sequia" = "turquoise3")) + # Colores personalizados para riego
theme_minimal() +  # Tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje X
library(emmeans)
mc <- emmeans(modelo,~ riego*geno)
mc <- emmeans(modelo, ~ riego|geno)
mc <- emmeans(modelo, ~ riego|geno) %>%
as.data.frame()
mc
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
# geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
view(dss)
dss <- read.csv(file = "datos 2/LA MOLINA 2014 POTATO WUE (FB) - fb.csv", header = TRUE, sep = "," )
view(dss)
modelo <- lm(formula = lfa ~ bloque + geno + riego +riego*geno , data = dss)
anova(modelo)
str(dss)
library(ggplot2)
ggplot(dss, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "genotipo" , y = "LFA" , fill = "riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Boxplot de LFA por genotipo y riego")
library(agricolae)
library(tidyverse)
#  comparación de medias para el factor geno
cat("Comparación de medias para geno:\n")
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# comparación de medias para el factor riego
cat("Comparación de medias para riego:\n")
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
# para la interaccion geno:riego
cat("Comparación de medias para la interacción geno:riego:\n")
tukey_interaccion <- HSD.test(modelo, c("riego", "geno"), group = TRUE)
print(tukey_interaccion)
str (tukey_interaccion)
mc <- tukey_interaccion$groups %>%
rownames_to_column("trat") %>%
separate(trat, c("riego", "variedad"))
str (mc)
library(ggplot2)
# Crear el gráfico de barras con ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +   # Barras agrupadas por riego
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) + # Etiquetas de los grupos sobre las barras
labs(title = "Producción por Variedad y Riego", x = "Variedad", y = "LFA") +   # Etiquetas de los ejes y título
scale_fill_manual(values = c("irrigado" = "tomato", "sequia" = "turquoise3")) + # Colores personalizados para riego
theme_minimal() +  # Tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje X
library(emmeans)
mc <- emmeans(modelo,~ riego*geno)
mc <- emmeans(modelo, ~ riego|geno)
mc <- emmeans(modelo, ~ riego|geno) %>%
as.data.frame()
mc
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
# geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
---
title: "mi pagina web"
---
title: "mi pagina web"
## Quarto
Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.
## Running Code
source('https://inkaverse.com/setup.r')
dss <- read.csv(file = "datos 2/LA MOLINA 2014 POTATO WUE (FB) - fb.csv", header = TRUE, sep = "," )
modelo <- lm(formula = lfa ~ bloque + geno + riego +riego*geno , data = dss)
anova(modelo)
ggplot(dss, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "genotipo" , y = "LFA" , fill = "riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Boxplot de LFA por genotipo y riego")
#  comparación de medias para el factor geno
cat("Comparación de medias para geno:\n")
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
#  comparación de medias para el factor geno
cat("Comparación de medias para geno:\n")
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
library(agricolae)
library(tidyverse)
#  comparación de medias para el factor geno
cat("Comparación de medias para geno:\n")
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# comparación de medias para el factor riego
cat("Comparación de medias para riego:\n")
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
# para la interaccion geno:riego
cat("Comparación de medias para la interacción geno:riego:\n")
tukey_interaccion <- HSD.test(modelo, c("riego", "geno"), group = TRUE)
print(tukey_interaccion)
str (tukey_interaccion)
mc <- tukey_interaccion$groups %>%
rownames_to_column("trat") %>%
separate(trat, c("riego", "variedad"))
str (mc)
# Crear el gráfico de barras con ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +   # Barras agrupadas por riego
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) + # Etiquetas de los grupos sobre las barras
labs(title = "Producción por Variedad y Riego", x = "Variedad", y = "LFA") +   # Etiquetas de los ejes y título
scale_fill_manual(values = c("irrigado" = "tomato", "sequia" = "turquoise3")) + # Colores personalizados para riego
theme_minimal() +  # Tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje X
mc <- emmeans(modelo,~ riego*geno)
mc <- emmeans(modelo, ~ riego|geno)
mc <- emmeans(modelo, ~ riego|geno) %>%
as.data.frame()
mc
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
# geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
str(dss)
source('https://inkaverse.com/setup.r')
url <-"https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs<-as_sheets_id(url)
fb<-gs %>%
range_read("fb")
view(fb)
str(fb)
modelo <- lm(formula = lfa ~ bloque + geno + riego +riego*geno , data = fb)
anova(modelo)
str(fb)
ggplot(fb, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "genotipo" , y = "LFA" , fill = "riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Boxplot de LFA por genotipo y riego")
#  comparación de medias para el factor geno
cat("Comparación de medias para geno:\n")
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# comparación de medias para el factor riego
cat("Comparación de medias para riego:\n")
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
# para la interaccion geno:riego
cat("Comparación de medias para la interacción geno:riego:\n")
tukey_interaccion <- HSD.test(modelo, c("riego", "geno"), group = TRUE)
print(tukey_interaccion)
str (tukey_interaccion)
mc <- tukey_interaccion$groups %>%
rownames_to_column("trat") %>%
separate(trat, c("riego", "variedad"))
str (mc)
# Crear el gráfico de barras con ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +   # Barras agrupadas por riego
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) + # Etiquetas de los grupos sobre las barras
labs(title = "Producción por Variedad y Riego", x = "Variedad", y = "LFA") +   # Etiquetas de los ejes y título
scale_fill_manual(values = c("irrigado" = "tomato", "sequia" = "turquoise3")) + # Colores personalizados para riego
theme_minimal() +  # Tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje X
mc <- emmeans(modelo,~ riego*geno)
mc <- emmeans(modelo, ~ riego|geno)
mc <- emmeans(modelo, ~ riego|geno) %>%
as.data.frame()
mc
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
# geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(PerformanceAnalytics)
install.packages("PerformanceAnalytics")
install.packages("ggfortify")
modelo <- lm(formula = lfa ~ bloque + geno + riego +riego*geno , data = fb)
anova(modelo)
str(fb)
ggplot(fb, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "genotipo" , y = "LFA" , fill = "riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Boxplot de LFA por genotipo y riego")
#  comparación de medias para el factor geno
cat("Comparación de medias para geno:\n")
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# comparación de medias para el factor riego
cat("Comparación de medias para riego:\n")
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
# para la interaccion geno:riego
cat("Comparación de medias para la interacción geno:riego:\n")
tukey_interaccion <- HSD.test(modelo, c("riego", "geno"), group = TRUE)
print(tukey_interaccion)
str (tukey_interaccion)
mc <- tukey_interaccion$groups %>%
rownames_to_column("trat") %>%
separate(trat, c("riego", "variedad"))
str (mc)
# Crear el gráfico de barras con ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +   # Barras agrupadas por riego
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) + # Etiquetas de los grupos sobre las barras
labs(title = "Producción por Variedad y Riego", x = "Variedad", y = "LFA") +   # Etiquetas de los ejes y título
scale_fill_manual(values = c("irrigado" = "tomato", "sequia" = "turquoise3")) + # Colores personalizados para riego
theme_minimal() +  # Tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje X
variables_cuantitativas <- fb[, c("lfa", "hi", "leafdw", "wue")]
matriz_correlacion <- cor(variables_cuantitativas, method = "pearson")
print(matriz_correlacion)
corrplot(matriz_correlacion, method = "circle", type = "upper",
tl.col = "black", tl.srt = 45,
title = "Matriz de Correlación", mar = c(0, 0, 1, 0))
library(corrplot)
install.packages("corrplot")
corrplot(matriz_correlacion, method = "circle", type = "upper",
tl.col = "black", tl.srt = 45,
title = "Matriz de Correlación", mar = c(0, 0, 1, 0))
library(corrplot)
corrplot(matriz_correlacion, method = "circle", type = "upper",
tl.col = "black", tl.srt = 45,
title = "Matriz de Correlación", mar = c(0, 0, 1, 0))
library(PerformanceAnalytics)
my_data <- fb[, c("lfa", "hi", "leafdw", "wue", "op_84")]
chart.Correlation(my_data, histogram=TRUE, pch=19)
library(tidyverse)
library(psych)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 12
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block"))
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block"))
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
library(tidyverse)
library(psych)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block"))
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
source("~/.active-rstudio-document", echo=TRUE)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
library(tidyverse)
library(psych)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
variables_cuantitativas <- fb[, c("lfa", "hi", "leafdw", "wue")]
matriz_correlacion <- cor(variables_cuantitativas, method = "pearson")
print(matriz_correlacion)
library(corrplot)
corrplot(matriz_correlacion, method = "circle", type = "upper",
tl.col = "black", tl.srt = 45,
title = "Matriz de Correlación", mar = c(0, 0, 1, 0))
fb %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col="blue"
, pch = 21
, stars = TRUE
, scale = FALSE
, lm= TRUE
)
mv <- fb %>%
group_by(riego, geno) %>%
summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>%
PCA(scale.unit = T, quali.sup = c(1:4), graph = F)
p1 <- plot(mv,
choix="ind",
habillage=1,
label = "ind")
p2 <- plot(mv,
choix="var")
list(p1, p2) %>%
plot_grid(plotlist = ., nrow = 1)
variables_cuantitativas <- fb[sapply(fb, is.numeric)]
variables_cuantitativas_estandarizadas <- scale(variables_cuantitativas)
pca_result <- prcomp(variables_cuantitativas_estandarizadas, center = TRUE, scale. = TRUE)
variables_cuantitativas <- fb[sapply(fb, is.numeric)]
variables_cuantitativas_estandarizadas <- scale(variables_cuantitativas)
pca_result <- prcomp(variables_cuantitativas_estandarizadas, center = TRUE, scale. = TRUE)
summary(pca_result)
screeplot(pca_result, type = "lines", main = "Scree Plot")
library(ggplot2)
biplot(pca_result, main = "Biplot del PCA", cex = 0.7)
library(ggfortify)
autoplot(pca_result, data = fb, colour = 'black', loadings = TRUE, loadings.label = TRUE,
loadings.label.size = 3, main = "Gráfico de Componentes Principales")
library(FactoMineR)
library(cowplot)
url <-"https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs<-as_sheets_id(url)
fb<-gs %>%
range_read("fb")
url <-"https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs<-as_sheets_id(url)
fb<-gs %>%
range_read("fb")
library(googlesheets4)
library(tidyverse)
url <-"https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs<-as_sheets_id(url)
fb<-gs %>%
range_read("fb")
